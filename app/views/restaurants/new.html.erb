<h1 class="text-3xl font-bold text-center my-8 pt-16">お店を登録する</h1>

<div class="flex justify-center items-center min-h-screen">
  <div class="w-full max-w-4xl bg-white shadow-md p-6 rounded-md rounded-xl">
    <%= form_with(model: @restaurant, class: "space-y-4") do |f| %>
      <%= render 'shared/error_messages', object: f.object %>

      <div>
        <%= f.label :restaurant_name, class: "block font-medium text-gray-700 text-lg" %>
        <%= f.text_field :name, id: 'restaurant-name', class: "mt-1 block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2 px-2" %>
      </div>

      <div>
        <% @prefecture = Area1.all %>
        <%= f.label :area1, class: "block font-medium text-gray-700 text-lg" %>
        <%= f.collection_select :area1, @prefecture, :id, :name, { include_blank: "", selected: params[:area1] }, { id: "prefectureSelect", class: "mt-1 block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2 px-2" } %>
      </div>

      <div>
        <% area2 = Area2.all %>
        <% @cities_json = area2.map { |o| o.attributes.symbolize_keys.select { |k, v| k.match(/(id|area1_id|city)\z/) } } %>
        <% @cities = Area2.where(area1_id: params[:area1]) %>
        <%= f.label :area2, class: "block font-medium text-gray-700 text-lg" %>
        <%= f.collection_select :area2, @cities, :id, :city, { include_blank: "", selected: params[:area2] }, { id: "citySelect", class: "mt-1 block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2 px-2", data: { json: @cities_json } } %>
      </div>

      <div>
        <%= f.label :time, class: "block font-medium text-gray-700 text-lg" %>
        <%= f.select :time, ["いつでも", "朝", "昼", "夜"], include_blank: "", class: "mt-1 block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2 px-2" %>
      </div>

      <div>
        <%= f.label :genre, class: "block font-medium text-gray-700 text-lg" %>
        <%= f.select :genre, ["和食", "洋食", "中華", "ラーメン", "カレー", "焼肉", "居酒屋", "カフェ", "パン", "スイーツ", "その他"], include_blank: "", class: "mt-1 block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2 px-2" %>
      </div>

      <div>
        <%= f.label :coment, class: "block font-medium text-gray-700 text-lg" %>
       <%= f.text_area :coment, id: 'coment', class: "mt-1 block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-2 px-4 h-24 text-start leading-tight" %></div>
     
      <%= f.hidden_field :lat, id:'lat' %>
      <%= f.hidden_field :lng, id:'lng' %>

      <div>
        <%= f.label :image, class: "block font-medium text-gray-700 text-lg" %>
        <div class="relative">
          <%= f.file_field :image, class: "absolute opacity-0 cursor-pointer" %>
          <div class="text-xlmt-1  border-2 border-gray-300 rounded-md py-3 px-6 bg-sky-600 text-white text-center font-semibold cursor-pointer hover:bg-blue-600">
            <span>ファイル選択</span>
          </div>
        </div>
      </div>
      
      <%= f.submit "お店を追加", class: "text-xl w-full py-2 px-4 bg-sky-600 text-white font-medium rounded-md shadow hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" %>
    <% end %>

    <!-- 地図情報部分をフォームの中に配置 -->
    <h2 class="text-xl text-center font-light text-gray-600 my-4">地図情報を追加したい場合はこちら！</h2>
    <div class="space-y-4">
      <input id="address" type="textbox" value="東京駅 ランチ" class="block w-full border-2 border-gray-90 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 py-3 px-4" />
      <input type="button" value="検索" onclick="codeAddress()" class="text-xl block w-full py-2 px-4 bg-sky-600 text-white font-medium rounded-md shadow hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" />
    </div>

    <div id="map" class="w-full h-96 mt-4 border rounded-md"></div>
  </div>
</div>





<script>
//連動セレクトボックス
var initSelect = ($target) => {
  //セレクトボックスの中身を空にする
  $target.empty()
  //非選択時のオプションタグを追加する
  $target.append(`<option></option>`)
}
//セレクトボックスの中身を第二引数 data の要素を持った選択肢にする
var setSelect = ($target, data) => {
  //引数 data の値をループで１件ずつ取得し、o として取り出す
  $.each(data, (i, o) => {
      //対象となるセレクトボックス($target)に対してオプションタグを追加
      $target.append(`<option value="${o.id}">${o.city}</option>`)
  })
}

//都道府県フォームからJSONデーターを取得

var citiesData = $('#citySelect').data('json')


var setCitiesOptions = (areaId) => {

  console.log(areaId);
  var result = citiesData.filter(o => o.area1_id == areaId)
  initSelect($('#citySelect'))
  setSelect($('#citySelect'), result)
}


document.getElementById('prefectureSelect').addEventListener('change', function(e){
  var areaId = e.target.value
  console.log(areaId);
  setCitiesOptions(areaId)
});

//googlemap

//地図初期化
let map
let marker
function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center:  {lat: 35.6803997, lng:139.7690174},  //東京
    zoom: 15,
    
  });
}
//モーション
let geocoder 
let aft
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode({'address': inputAddress},function(results,status){
  //マーカーが複数追加できないようにする 
  if(status=="OK"){
    if(aft==true){
      marker.setMap(null);}  
    
      map.setCenter(results[0].geometry.location);
      marker = new google.maps.Marker({
      map: map,
      position: results[0].geometry.location,
      draggable:true
      });

      aft = true

      document.getElementById('lat').value = results[0].geometry.location.lat();
      document.getElementById('lng').value = results[0].geometry.location.lng();

      //ドラッグ終了時のイベント
      google.maps.event.addListener(marker,'dragend',function(ev){
        document.getElementById('lat').value = ev.latLng.lat();
        document.getElementById('lng').value = ev.latLng.lng();
      });
  } else {
    alert('該当する結果がありませんでした：' + status);
  }

  }); 

}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.map_api_key %> &callback=initMap" async defer></script>