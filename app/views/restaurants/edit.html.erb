<h1>お店情報の編集</h1>

<div class="row">
  <div class="col-md-6 col-md-offset-3">
    <div class="form">
      <%= form_with(model: @restaurant) do |f| %>
        <%= render 'shared/error_messages', object: f.object %>

        <%= f.label :restaurant_name %>
        <%= f.text_field :name ,value:@restaurant.name ,id:'restaurant-name' %>
      
        <% @prefecture = Area1.all %>
 
        <%= f.label :area1 %>
        <%= f.collection_select :area1, @prefecture , :id, :name, { include_blank: "",selected: params[:area1]}, { id: "prefectureSelect" }    %>
      
        <% area2 = Area2.all %>
        <% @cities_json = area2.map{|o| o.attributes.symbolize_keys.select{|k,v| k.match(/(id|area1_id|city)\z/) } } %>
        <%  @cities = Area2.where(area1_id: params[:area1])%>
      
        <%= f.label :area2 %>
        <%= f.collection_select :area2, @cities, :id, :city, { include_blank: "" ,selected: params[:area2]} , { id: "citySelect" , data: { json: @cities_json }} %>
      
        <%= f.label :time %>
        <%= f.select :time, ["いつでも","朝","昼","夜"], include_blank: "" %>

        <%= f.label :genre %>
        <%= f.select :genre, ["和食","洋食","中華","ラーメン","カレー","焼肉","居酒屋","カフェ","パン","スイーツ","その他"], include_blank: "" %>

        <%= f.label :coment %>
        <%= f.text_field :coment ,value:@restaurant.coment,id:'coment' %>

        <%= f.hidden_field :lat, id:'lat' %>
       
        <%= f.hidden_field :lng, id:'lng' %>

      
      <%= f.label :画像のアップロード %>
      <span class="image"> 
        <%= f.file_field :image %>
      </span>

     <%= f.submit "お店情報を更新", class: "btn btn-primary" %>
    <% end %>
    <h2>地図情報を変更したい場合はこちら！</h2>
    <input id="address" type="textbox" value="">
    <input type="button" value="検索" onclick="codeAddress()">
    <div id='map'></div>
    <style>
    #map {height: 420px;
    width: 100%;}
   </style>

  </div>
</div>

<script>

//確認用


var initSelect = ($target) => {
  //セレクトボックスの中身を空にする
  $target.empty()
  //非選択時のオプションタグを追加する
  $target.append(`<option></option>`)
}
//セレクトボックスの中身を第二引数 data の要素を持った選択肢にする
var setSelect = ($target, data) => {
  //引数 data の値をループで１件ずつ取得し、o として取り出す
  $.each(data, (i, o) => {
      //対象となるセレクトボックス($target)に対してオプションタグを追加
      $target.append(`<option value="${o.id}">${o.city}</option>`)
  })
}

//都道府県フォームからJSONデーターを取得

var citiesData = $('#citySelect').data('json')


var setCitiesOptions = (areaId) => {

  console.log(areaId);
  var result = citiesData.filter(o => o.area1_id == areaId)
  initSelect($('#citySelect'))
  setSelect($('#citySelect'), result)
}


document.getElementById('prefectureSelect').addEventListener('change', function(e){
  var areaId = e.target.value
  console.log(areaId);
  setCitiesOptions(areaId)
});

//googlemap

//地図初期化
let map
let marker
function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    center:  {lat: <%= @restaurant.lat %>, lng: <%= @restaurant.lng %>},  
    zoom: 15,
    
  });
}
//モーション
let geocoder 
let aft
function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode({'address': inputAddress},function(results,status){
  //マーカーが複数追加できないようにする 
  if(status=="OK"){
    if(aft==true){
      marker.setMap(null);}  
    
      map.setCenter(results[0].geometry.location);
      marker = new google.maps.Marker({
      map: map,
      position: results[0].geometry.location,
      draggable:true
      });

      aft = true

      document.getElementById('lat').value = results[0].geometry.location.lat();
      document.getElementById('lng').value = results[0].geometry.location.lng();

      //ドラッグ終了時のイベント
      google.maps.event.addListener(marker,'dragend',function(ev){
        document.getElementById('lat').value = ev.latLng.lat();
        document.getElementById('lng').value = ev.latLng.lng();
      });
  } else {
    alert('該当する結果がありませんでした：' + status);
  }

  }); 

}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.map_api_key %> &callback=initMap" async defer></script>
